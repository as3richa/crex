#!/usr/bin/env ruby

require 'yaml'

data = Dir.glob('spec/*.yml').sort.flat_map { |filename| YAML.load_file(filename) }

puts("#include \"types.h\"")

puts("const size_t n_patterns = #{data.size};")

puts("const pattern_defn_t pattern_defns[] = {")

data.each_with_index do |datum, index|
  pattern = datum.fetch('pattern')
  suffix = (index == data.size - 1) ? "" : ","
  puts("  {#{pattern.inspect}, #{pattern.size}}#{suffix}")
end

puts("};")

n_cases = data.map { |datum| datum.fetch('testcases').length }.sum

puts("const size_t n_cases = #{n_cases};")

puts("const testcase_t testcases[] = {")

data.each_with_index do |datum, pattern_index|
  testcases = datum.fetch('testcases')

  testcases.each_with_index do |testcase, index|
    str = testcase.fetch('str')

    suffix = if pattern_index == data.size - 1 && index == testcases.size - 1
      ""
    else
      ","
    end

    is_match = !testcase.fetch('groups').nil?

    groups = if !is_match
      "{0, 0}"
    else
      parts = testcase.fetch('groups').map do |position, substring|
        raise "Bad test data" unless str[position, substring.length] == substring
        "{#{position}, #{position + substring.length}}"
      end

      "{#{parts.join(', ')}}"
    end

    puts("  {#{pattern_index}, #{str.inspect}, #{str.size}, #{is_match ? 1 : 0}, #{groups}}#{suffix}")
  end
end

puts("};")
